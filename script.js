"use strict";

const MAX_WORD_LENGTH = 6;
const words = [
  "bon",
  "jour",
  "soir",
  "oui",
  "non",
  "nom",
  "bleu",
  "rouge",
  "vert",
  "rose",
  "noir",
  "gris",
  "un",
  "deux",
  "trois",
  "sept",
  "huit",
  "neuf",
  "dix",
  "être",
  "avoir",
  "aller",
  "parler",
  "aimer",
  "vivre",
  "penser",
  "manger",
  "finir",
  "vendre",
  "perdre",
  "mer",
  "vin",
  "eau",
  "pain",
  "chien",
  "chat",
  "oiseau",
  "ours",
  "loup",
  "fleur",
  "arbre",
  "feu",
  "terre",
  "ciel",
  "lune",
  "étoile",
  "soleil",
  "chaise",
  "table",
  "lit",
  "porte",
  "toit",
  "mur",
  "sol",
  "ville",
  "pays",
  "mont",
  "val",
  "lac",
  "merci",
  "s’il",
  "plait",
  "après",
  "tard",
  "demain",
  "chance",
  "rien",
  "très",
  "bien",
  "vais",
  "je",
  "tu",
  "il",
  "elle",
  "nous",
  "vous",
  "ils",
  "elles",
  "ami",
  "père",
  "mère",
  "fils",
  "fil",
  "frère",
  "sœur",
  "homme",
  "femme",
  "enfant",
  "corps",
  "tête",
  "bras",
  "main",
  "doigt",
  "jambe",
  "pied",
  "œil",
  "bouche",
  "nez",
  "cheveu",
  "visage",
  "temps",
  "heure",
  "minute",
  "mois",
  "an",
  "matin",
  "nuit",
  "hier",
  "jamais",
  "tôt",
  "avant",
  "depuis",
  "pour",
  "sans",
  "contre",
  "entre",
  "chez",
  "avec",
  "mais",
  "ou",
  "et",
  "donc",
  "or",
  "ni",
  "car",
  "comme",
  "si",
  "que",
  "quoi",
  "où",
  "quand",
  "parce",
  "alors",
  "voici",
  "voilà",
  "ici",
  "là",
  "dedans",
  "dehors",
  "sous",
  "sur",
  "devant",
  "à",
  "en",
  "par",
  "jus",
  "lait",
  "café",
  "thé",
  "bière",
  "pomme",
  "poire",
  "pêche",
  "raisin",
  "fraise",
  "cerise",
  "melon",
  "citron",
  "banane",
  "orange",
  "kiwi",
  "tomate",
  "salade",
  "pois",
  "maïs",
  "beurre",
  "œuf",
  "viande",
  "poulet",
  "sucre",
  "sel",
  "poivre",
  "miel",
  "gâteau",
  "tarte",
  "crème",
  "glace",
  "bonbon",
  "soda",
  "lire",
  "écrire",
  "danser",
  "jouer",
  "rire",
  "savoir",
  "devoir",
  "dire",
  "faire",
  "voir",
  "venir",
  "partir",
  "rester",
  "tomber",
  "donner",
  "croire",
  "gagner",
  "cacher",
  "ouvrir",
  "fermer",
  "aider",
  "sauver",
  "garder",
  "guérir",
  "blessé",
  "malade",
  "sain",
  "fort",
  "faible",
  "riche",
  "pauvre",
  "jeune",
  "vieux",
  "beau",
  "laid",
  "grand",
  "petit",
  "haut",
  "bas",
  "long",
  "court",
  "épais",
  "mince",
  "dur",
  "doux",
  "chaud",
  "froid",
  "plein",
  "vide",
  "lourd",
  "léger",
  "pire",
  "rapide",
  "lent",
  "propre",
  "sale",
  "facile",
  "clair",
  "foncé",
  "près",
  "loin",
  "nulle",
  "chaque",
  "autre",
  "même",
  "seul",
  "tout",
  "peu",
  "assez",
  "trop",
  "mal",
  "mieux",
  "enfin",
  "triste",
  "excité",
  "calme",
  "relax",
  "prêt",
  "occupé",
  "libre",
  "usé",
  "ouvert",
  "fermé",
  "mou",
  "sûr",
  "utile",
  "mineur",
  "majeur",
  "simple",
  "global",
  "local",
  "public",
  "privé",
  "commun",
  "unique",
  "ancien",
  "récent",
  "rare",
  "normal",
  "obscur",
  "claire",
  "confus",
  "viable",
  "actif",
  "passif",
  "vivant",
  "mort",
  "absent",
  "passé",
  "futur",
  "stable",
  "solide",
  "rigide",
  "fixe",
  "mobile",
  "inégal",
  "adapté",
  "idéal",
  "avancé",
  "total",
  "entier",
  "limité",
  "infini",
  "fini",
  "épars",
  "dilué",
  "saturé",
  "scares",
  "avare",
  "fécond",
  "noble",
  "exquis",
  "brut",
  "poli",
  "impoli",
  "chic",
  "démodé",
  "banal",
  "absolu",
  "réel",
  "fictif",
  "faux",
  "franc",
  "évasif",
  "direct",
  "ambigu",
  "opaque",
].filter((word) => word.length <= MAX_WORD_LENGTH);

const wordButton = document.getElementById("word-button");
const winSound = document.getElementById("win-sound");

function showRandomWord() {
  const randomIndex = Math.floor(Math.random() * words.length);
  wordButton.textContent = words[randomIndex];
}

function triggerAnimation(element, animationClassName) {
  // Remove the class and force reflow to reset the animation
  element.classList.remove(animationClassName);
  void element.offsetWidth; // Reflow
  element.classList.add(animationClassName);
}

wordButton.addEventListener("click", (event) => {
  showRandomWord();
  winSound.play();
  triggerAnimation(wordButton, "radial-pulse");
  createConfetti(event);
});

// Trigger the animation on load
window.addEventListener("load", () => {
  showRandomWord(); // Show the first word

  // Set a timeout to ensure the initial animation is applied after the page load
  setTimeout(() => {
    triggerAnimation(wordButton, "radial-pulse");
  }, 0); // Timeout can be set to 0 to queue it after the browser has finished its current frame
});

function createConfetti(event) {
  const confettiCount = 100;
  const confettiWrapper = document.createElement("div");
  confettiWrapper.classList.add("confetti-wrapper");
  for (let i = 0; i < confettiCount; i++) {
    const confetti = document.createElement("div");
    confetti.classList.add("confetti");
    confetti.style.backgroundColor = getRandomColor();
    confetti.style.left = `${event.clientX}px`;
    confetti.style.top = `${event.clientY}px`;
    confettiWrapper.appendChild(confetti);
    animateConfetti(confetti);
  }
  document.body.appendChild(confettiWrapper);

  // Remove confetti after it falls down
  setTimeout(() => {
    document.body.removeChild(confettiWrapper);
  }, 6000); // Adjust time as needed
}

function getRandomColor() {
  const colors = [
    "#FF0000",
    "#FF7F00",
    "#FFFF00",
    "#00FF00",
    "#0000FF",
    "#4B0082",
    "#9400D3",
  ]; // Rainbow colors
  return colors[Math.floor(Math.random() * colors.length)];
}

function animateConfetti(confetti) {
  const xEnd =
    Math.random() * (window.innerWidth - confetti.offsetWidth) -
    window.innerWidth / 2;
  const yEnd =
    Math.random() * (window.innerHeight - confetti.offsetHeight) -
    window.innerHeight / 2;
  confetti.animate(
    [
      { transform: `translate3d(0, 0, 0)`, opacity: 1 },
      { transform: `translate3d(${xEnd}px, ${yEnd}px, 0)`, opacity: 0 },
    ],
    {
      // Timing options
      duration: Math.random() * 3000 + 3000, // 3 to 6 seconds
      easing: "ease-out",
      fill: "forwards",
    }
  );
}
